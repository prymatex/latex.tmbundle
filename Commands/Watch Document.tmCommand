<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>bundleUUID</key>
	<string>46788DCE-6227-11D9-BFB1-000D93589AF6</string>
	<key>command</key>
	<string>#!/usr/bin/env bash
[[ -f "${TM_SUPPORT_PATH}/lib/bash_init.sh" ]] &amp;&amp; . "${TM_SUPPORT_PATH}/lib/bash_init.sh"

watch_script="$TM_BUNDLE_SUPPORT"/bin/latex_watch.pl

file="${TM_LATEX_MASTER:-$TM_FILEPATH}"
dirname="$(dirname "$file")"
basename="$(basename "$file" .tex)"

# Check whether file is already being watched
pid_file="$dirname/.$basename.watcher_pid"
if [ -f "$pid_file" ]; then
	if [ 2 -eq $(/bin/ps -p $(cat "$pid_file") | /usr/bin/wc -l) ]
	then
		ok=$(CocoaDialog ok-msgbox \
			--title "LaTeX Watch: File already watched" \
			--text "Stop watching?" \
			--informative-text "The file '$file' is already being watched. Shall I stop watching it?")
		if [ "$ok" -eq 1 ]; then
			kill -KILL $(cat "$pid_file")
		fi
		exit
	fi
fi

# Make sure we can find the watch script...
if [ \! -f "$watch_script" ]; then
	CocoaDialog msgbox \
		--button1 Cancel \
		--title "LaTeX Watch error" \
		--text "Could not find script" \
		--informative-text "The file '$watch_script' could not be found. Make sure you have installed it in the right place."
	exit 1
fi

# ... and the Perl interpreter
if [ -x "/usr/bin/perl" ]; then
	# We prefer /usr/bin/perl, because we want to use Foundation.pm
	perl="/usr/bin/perl"
else
	type perl || {
		CocoaDialog msgbox \
			--button1 Cancel \
			--title "LaTeX Watch error" \
			--text "Could not find Perl" \
			--informative-text "I could not locate the perl executable! Make sure it's in your PATH ($PATH)."
		exit 1
	}
	perl=perl
fi

# Spawn progress bar. Ironically it's quite a CPU hog, so give it a low
#  scheduling priority.
nice -n 20 CocoaDialog progressbar --indeterminate --title 'LaTeX Watch' --text 'LaTeX Watch: Compiling document' &lt;/dev/console &amp;&gt;/dev/null &amp;
progressbar_pid=$(jobs -p %%)
disown %%

watch_script_opts="--textmate-pid $PPID --progressbar-pid $progressbar_pid"
if [ -n "$TM_LATEX_WATCH_DEBUG" ]; then
	watch_script_opts="$watch_script_opts --debug"
fi

"$perl" "$watch_script" $watch_script_opts "$file" &amp;&gt;/dev/console &amp;
jobs -p %% &gt; "$pid_file"
</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^@w</string>
	<key>name</key>
	<string>Watch Document</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>discard</string>
	<key>requiredCommands</key>
	<array>
		<dict>
			<key>command</key>
			<string>kpsewhich</string>
			<key>locations</key>
			<array>
				<string>/usr/texbin/kpsewhich</string>
				<string>/opt/local/bin/kpsewhich</string>
			</array>
		</dict>
	</array>
	<key>scope</key>
	<string>text.tex.latex</string>
	<key>uuid</key>
	<string>4BB11B68-A0F5-4670-A0B9-B3982D10A54B</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
